version: '3.8'

networks:
  monitoring-network:
    external: true

volumes:
  vm-data:
  grafana-data:

services:
  victoria-metrics:
    image: victoriametrics/victoria-metrics:${VICTORIA_METRICS_VERSION}
    container_name: victoria-metrics
    ports:
      - "${VICTORIA_METRICS_PORT}:8428"
    volumes:
      - ./config/victoria-metrics/victoria-metrics.yaml:/victoria-metrics.yaml
      - ${VM_DATA_DIR:-vm-data}:/victoria-metrics-data
    command:
      - "--promscrape.config=/victoria-metrics.yaml"
      - "--promscrape.config.strictParse=false"
      - "--storageDataPath=/victoria-metrics-data"
    networks:
      - monitoring-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://127.0.0.1:8428/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  grafana:
    image: grafana/grafana:${GRAFANA_VERSION}
    container_name: grafana
    ports:
      - "${GRAFANA_PORT}:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel,grafana-image-renderer
      - GF_RENDERING_SERVER_URL=http://renderer:8081/render
      - GF_RENDERING_CALLBACK_URL=http://grafana:3000/
      - GF_LOG_FILTERS=rendering:debug
    volumes:
      - ./config/grafana/provisioning:/etc/grafana/provisioning
      - ./config/grafana/dashboards:/var/lib/grafana/dashboards
      - ${GRAFANA_DATA_DIR:-grafana-data}:/var/lib/grafana
    networks:
      - monitoring-network
    depends_on:
      - victoria-metrics
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  renderer:
    image: grafana/grafana-image-renderer:${RENDERER_VERSION}
    container_name: grafana-renderer
    ports:
      - "${RENDERER_PORT}:8081"
    environment:
      - ENABLE_METRICS=${RENDERER_ENABLE_METRICS}
      - IGNORE_HTTPS_ERRORS=${RENDERER_IGNORE_HTTPS_ERRORS}
    networks:
      - monitoring-network
    restart: unless-stopped
